version: "3.9"

networks:
  app_network:
    driver: bridge

volumes:
  pgdata:
  redisdata:

services:
  # ========================================
  # API - Aplicação Node.js
  # ========================================
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: node-ts-api
    restart: unless-stopped
    environment:
      # Application
      NODE_ENV: ${NODE_ENV:-production}
      PORT: ${PORT:-3000}
      SERVER_HOST: ${SERVER_HOST:-0.0.0.0}
      
      # Database
      DATABASE_URL: postgresql://admin:admin@db:5432/appdb?schema=public
      # DATABASE_URL: ${DATABASE_URL:-postgresql://admin:admin@db:5432/appdb?schema=public}
      
      # JWT
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-this-in-production}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-7d}
      
      # CORS
      CORS_ORIGINS: ${CORS_ORIGINS:-http://localhost:5173,http://localhost:3000}
      
      # Rate Limiting
      RATE_LIMIT_WINDOW_MS: ${RATE_LIMIT_WINDOW_MS:-60000}
      RATE_LIMIT_MAX: ${RATE_LIMIT_MAX:-100}
      
      # Logging
      LOG_LEVEL: ${LOG_LEVEL:-info}
      
      # Redis (opcional)
      REDIS_HOST: ${REDIS_HOST:-redis}
      REDIS_PORT: ${REDIS_PORT:-6379}
      
      # Docker específico
      SKIP_MIGRATIONS: ${SKIP_MIGRATIONS:-0}
      
    ports:
      - "${PORT:-3000}:3000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # ========================================
  # PostgreSQL - Banco de Dados
  # ========================================
  db:
    image: postgres:16-alpine
    container_name: node-ts-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-admin}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-admin}
      POSTGRES_DB: ${POSTGRES_DB:-appdb}
      POSTGRES_INITDB_ARGS: "-E UTF8 --locale=C"
    ports:
      - "${DB_HOST_PORT:-5432}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-admin} -d ${POSTGRES_DB:-appdb}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # ========================================
  # Redis - Cache (Opcional)
  # ========================================
  redis:
    image: redis:7-alpine
    container_name: node-ts-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    ports:
      - "${REDIS_HOST_PORT:-6379}:6379"
    volumes:
      - redisdata:/data
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s